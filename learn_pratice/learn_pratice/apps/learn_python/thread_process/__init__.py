

'''

并发：在操作系统中，是指一个时间段中有几个程序都处于已启动运行到运行完毕之间，
且这几个程序都是在同一个处理机上运行，但任一个时刻点上只有一个程序在处理机上运行。
简言之，是指系统具有处理多个任务的能力。

并行：当系统有一个以上CPU时,则线程的操作有可能非并发。
当一个CPU执行一个线程时，另一个CPU可以执行另一个线程，
两个线程互不抢占CPU资源，可以同时进行，这种方式我们称之为并行(Parallel)。
简言之，是指系统具有同时处理多个任务的能力。

'''


'''

对于一次IO访问（以read举例），数据会先被拷贝到操作系统内核的缓冲区中，然后才会从操作系统内核的缓冲区拷贝到应用程序的地址空间。
所以说，当一个read操作发生时，它会经历两个阶段：
     1. 等待数据准备 (Waiting for the data to be ready)
     2. 将数据从内核拷贝到进程中 (Copying the data from the kernel to the process)
     
同步：当进程执行IO(等待外部数据）的时候，-----等。同步（例如打电话的时候必须等）
异步：当进程执行IO(等待外部数据）的时候，-----不等，去执行其他任务，一直等到数据接收成功，再回来处理。异步（例如发短信）
当我们去爬取一个网页的时候，要爬取多个网站，有些人可能会发起多个请求，然后通过函数顺序调用。执行顺序也是先调用先执行。效率非常低。

二、同步和异步

所谓同步就是一个任务的完成需要依赖另外一个任务时，只有等待被依赖的任务完成后，依赖的任务才能算完成，
这是一种可靠的任务序列。要么成功都成功，失败都失败，两个任务的状态可以保持一致。

所谓异步是不需要等待被依赖的任务完成，只是通知被依赖的任务要完成什么工作，依赖的任务也立即执行，
只要自己完成了整个任务就算完成了。至于被依赖的任务最终是否真正完成，依赖它的任务无法确定，所以它是不可靠的任务序列
'''


'''
阻塞和非阻塞指的是执行一个操作是等操作结束再返回，还是马上返回

只要有一丁点阻塞，就是阻塞IO。
异步IO的特点就是全程无阻塞。

阻塞(Blocked)状态正在执行的进程，由于等待某个事件发生而无法执行时，便放弃处理机而处于阻塞状态。
引起进程阻塞的事件可有多种，例如，等待I/O完成、申请缓冲区不能满足、等待信件(信号)等
'''